// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.eu');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Gehitu iruzkina";
Blockly.Msg.ARD_ANALOGREAD = "Leer pin analógico";
Blockly.Msg.ARD_ANALOGREAD_TIP = "Devuelve valor entre 0 y 1024";
Blockly.Msg.ARD_ANALOGWRITE = "Establecer pin analógico";
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Escribir valor entre 0 y 255 en la salida analógica deseada";
Blockly.Msg.ARD_BUILTIN_LED = "Establecer LED integrado";
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Establecer LED integrado en el Arduino como encendido o apagado";
Blockly.Msg.ARD_DEFINE = "Definir";
Blockly.Msg.ARD_DIGITALREAD = "Leer pin digital";
Blockly.Msg.ARD_DIGITALREAD_TIP = "Leer el valor de un pin digital: ALTO o BAJO";
Blockly.Msg.ARD_DIGITALWRITE = "Establecer pin digital";
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Establece el valor de un pin digital como ALTO o BAJO";
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino bucle infinito:";
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino configuración:";
Blockly.Msg.ARD_FUN_RUN_TIP = "Define las funciones setup() y loop() del arduino";
Blockly.Msg.ARD_HIGH = "ALTO";
Blockly.Msg.ARD_HIGHLOW_TIP = "Establece el valor de un pin digital como ALTO o BAJO";
Blockly.Msg.ARD_LOW = "BAJO";
Blockly.Msg.ARD_MAP = "Mapeo";
Blockly.Msg.ARD_MAP_TIP = "Remapear numbero de [0-1024] a otro rango.";
Blockly.Msg.ARD_MAP_VAL = "Valor a [0-";
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";
Blockly.Msg.ARD_PIN_WARN1 = "El pin %1 está siendo empleado como %4 y se y se necesita como %3.";
Blockly.Msg.ARD_PULSEON = "en el pin";
Blockly.Msg.ARD_PULSEREAD = "Leer pulso";
Blockly.Msg.ARD_PULSETIMEOUT = "durante";
Blockly.Msg.ARD_PULSETIMEOUT_MS = "milisegundos";
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Mide la duración de un pulso en un pin, si este sucede en un tiempo determinado.";
Blockly.Msg.ARD_PULSE_TIP = "Mide la duración de un pulso en un pin";
Blockly.Msg.ARD_SERIAL_BPS = "bps";
Blockly.Msg.ARD_SERIAL_PRINT = "Escribir";
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "añadir salto de linea";
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Envia un mensaje por el puerto serie";
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "Para usar %1 es necesario emplear previamente un bloque de configuración";
Blockly.Msg.ARD_SERIAL_SETUP = "Configuración";
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selecciona la velocidad de un puerto serie";
Blockly.Msg.ARD_SERIAL_SPEED = ":  Velocidad ";
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";
Blockly.Msg.ARD_SPI_SETUP = "Setup";
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";
Blockly.Msg.ARD_STEPPER_SETUP = "Setup";
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";
Blockly.Msg.ARD_STEPPER_STEPS = "steps";
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";
Blockly.Msg.ARD_STEPPER_STEP_WARN1 = "A STEPPER configuration block must be added to use this block!";
Blockly.Msg.ARD_STEPPER_STEP_WARN2 = "A Name input must be added to the Stepper configuration block!";
Blockly.Msg.ARD_STEPPER_STEP_WARN3 = "Selected stepper does not exist any more, please select a new one.";
Blockly.Msg.ARD_TIME_DELAY = "Esperar";
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microsegundos";
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Esperar un tiempo específico en microsegundos";
Blockly.Msg.ARD_TIME_DELAY_TIP = "Esperar un tiempo específico en milisegundos";
Blockly.Msg.ARD_TIME_INF = "Esperar por siempre(terminar el programa)";
Blockly.Msg.ARD_TIME_INF_TIP = "Espera indefinida por lo que termina el programa";
Blockly.Msg.ARD_TIME_MICROS = "Tiempo transcurrido (microsegundos)";
Blockly.Msg.ARD_TIME_MICROS_TIP = "Devuelve el tiempo en microsegundos desde inicio del programa.";
Blockly.Msg.ARD_TIME_MILLIS = "Tiempo transcurrido (milisegundos)";
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Devuelve el tiempo en milisegundos desde inicio del programa.";
Blockly.Msg.ARD_TIME_MS = "milisegundos";
Blockly.Msg.ARD_TONEFREQ = "at frequency";
Blockly.Msg.ARD_TONE_FREQ = "frequency";
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";
Blockly.Msg.ARD_TYPE_ARRAY = "Array";
Blockly.Msg.ARD_TYPE_BOOL = "Booleano";
Blockly.Msg.ARD_TYPE_CHAR = "Carácter";
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";
Blockly.Msg.ARD_TYPE_LONG = "Número largo";
Blockly.Msg.ARD_TYPE_NULL = "Null";
Blockly.Msg.ARD_TYPE_NUMBER = "Número";
Blockly.Msg.ARD_TYPE_SHORT = "Entero corto";
Blockly.Msg.ARD_TYPE_TEXT = "Texto";
Blockly.Msg.ARD_TYPE_UNDEF = "Indefinido";
Blockly.Msg.ARD_VALUE = "value";  // untranslated
Blockly.Msg.ARD_VAR_AS = "como";
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";
Blockly.Msg.ARD_WRITE_TO = "to";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Balioa aldatu:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";  // untranslated
Blockly.Msg.CLEAN_UP = "Blokeak apaindu";
Blockly.Msg.COLLAPSE_ALL = "Blokeak uzkurtu";
Blockly.Msg.COLLAPSE_BLOCK = "Blokea uzkurtu ";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "proporción";
Blockly.Msg.COLOUR_BLEND_TITLE = "combinar";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Combina dos colores con una proporción determinada (0,0–1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://es.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Kolore bat aukeratu";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "Kolore aleatorioa";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Kolore aleatorioa";
Blockly.Msg.COLOUR_RGB_BLUE = "urdina";
Blockly.Msg.COLOUR_RGB_GREEN = "berdea";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "gorria";
Blockly.Msg.COLOUR_RGB_TITLE = "Margotu kolore ";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con cantidades específicas de rojo, verde y azul. Todos los valores deben encontrarse entre 0 y 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "Begizta bukatu";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "Urrengo iterazioarekin jarraitu";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Eusten duen begista bukatu.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Urrengo blokeak ez ditu egiten baina urrengo iterazioaz jarraitzen du";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "OHARTARAZPEN: Bloke hau begizta baten barruan soilik erabil daitezke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://es.wikipedia.org/wiki/Foreach";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "para cada elemento %1 en la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento en una lista, establecer la variable '%1' al elemento y luego hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = " %1 rekin kontatu  %2 tik %3 arte, %4 geituz";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = " \"%1\" aldagaia gehitu hasierako zenbakitik azkeneraino, zehaztutako bitartearekin, eta zehaztutako blokeak exekutatuz.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Blokeari baldintza bat gehitu.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Baldintza orokorra getu blokearen amaieran.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Sekzioak gehitu bloke hau konnfiguratzeko.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "beztela:";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "beztela, betezen bada:";
Blockly.Msg.CONTROLS_IF_MSG_IF = "betetzen bada: ";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Egiazkoa bada, zehaztutako deklarazioak egin.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Egiazkoa bada, lehenengo deklarazio blokea egin,  beztela, bigarrena.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Lehenengo sententzia egiazkoa bada, Lehenengo deklarazio blokea egin, beztela, bigarren sententzia egiazkoa bada, bigarren deklarazio blokea exekutatu";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Lehenengo sententzia egiazkoa bada, Lehenengo deklarazio blokea egin, beztela, bigarren sententzia egiazkoa bada, bigarren deklarazio blokea exekutatu. bat ere egiazkoa ez bada, azkenengo deklarazio blokea egin";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://es.wikipedia.org/wiki/Bucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "egin:";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "%1 aldiz errepikatu ";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Lan bat hainbat aldiz errepikatu";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Betetzeraino errepikatu";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "Betetzen den bitartean, errepikatu";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Operazio logikoa betetzen ez den bitartean, lana errepikatu.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Operazio logikoa betetzen bada, lana errepikatu.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Bloke guztiak ezabatu?";
Blockly.Msg.DELETE_BLOCK = "Ezabatu blokeak";
Blockly.Msg.DELETE_X_BLOCKS = "%1 blokeak ezabatu";
Blockly.Msg.DISABLE_BLOCK = "Blokea desaktibatu";
Blockly.Msg.DUPLICATE_BLOCK = "Bikoiztu";
Blockly.Msg.ENABLE_BLOCK = "Blokea aktibatu";
Blockly.Msg.EXPAND_ALL = "Blokeak zabaldu ";
Blockly.Msg.EXPAND_BLOCK = "Blokea zabaldu";
Blockly.Msg.EXTERNAL_INPUTS = "Kanpoko sarbideak";
Blockly.Msg.HELP = "Laguntza";
Blockly.Msg.INLINE_INPUTS = "Lerro sarbideak";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devuelve una lista, de longitud 0, sin ningún dato";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar las secciones para reconfigurar este bloque de lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de elementos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# del final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Devuelve el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # del final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el último";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener sublista desde el primero";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener sublista desde # del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encontrar la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve 0 si el elemento no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 está vacía";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Devuelve verdadero si la lista está vacía.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una lista que consta de un valor dado repetido el número de veces especificado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "establecer";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al inicio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserta el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserta el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añade el elemento al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento aleatoriamente en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Establece el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Establece el elemento en la posición especificada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Establece un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "hacer lista a partir de texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "hacer texto a partir de lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Unir una lista de textos en un solo texto, separado por un delimitador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir el texto en una lista de textos, separando en cada delimitador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con delimitador";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faltsua";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "faltsu edo egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "egiazkoa";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matemática";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Bi sarrera berdinak badira, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Lehenengo sarrera begarrena baino handiagoa bada, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Lehenengo sarrera begarrena baino handiagoa bada edo berdina bada, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Lehenengo sarrera begarrena baino txikiagoa bada, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Lehenengo sarrera begarrena baino txikiagoa bada edo berdina bada, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Bi sarrera ezberdinak badira, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "%1 ezeztatua";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Sarrera egiazkoa bada, faltsua bueltatzen du eta sarrera faltsua bada, egiazkoa bueltatzen du.";
Blockly.Msg.LOGIC_NULL = "hutsa";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Hutsa bueltatu.";
Blockly.Msg.LOGIC_OPERATION_AND = "eta";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "edo";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Sarrera guztiak egiazkoak badira, egiazkoa bueltatzen du";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Sarrera bat egiazkoa bada, egiazkoa bueltazen du";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "Frogatu";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "faltsua bada";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "egiazkoa bada";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Sententzia egiazkoa edo faltsua den arabera, balio ezberdia bueltatzen du.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://es.wikipedia.org/wiki/Aritmética";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Bi zenbakien gehiketa bueltatzen du.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Bi zenbakien zatiketa bueltatzen du.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Bi zenbakien kenketa bueltatzen du.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Bi zenbakien produktua bueltatzen du.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "%1 a, %2 arekin aldatu";
Blockly.Msg.MATH_CHANGE_TOOLTIP = " «%1» aldagaiari zenbaki bat gehitu.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Konstante arruntak bueltatzen ditu: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "%1, %2 eta %3 artean mugatu";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "zenbaki bat bezte bi zenbaki tartean mugatu.";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "zatigarria da";
Blockly.Msg.MATH_IS_EVEN = "bikoitia da";
Blockly.Msg.MATH_IS_NEGATIVE = "Zenbaki negatiboa da";
Blockly.Msg.MATH_IS_ODD = "bakoitia da";
Blockly.Msg.MATH_IS_POSITIVE = "Zenbaki pozitiboa da";
Blockly.Msg.MATH_IS_PRIME = "zenbaki lehena da";
Blockly.Msg.MATH_IS_TOOLTIP = "Zenbaki bat bakoitza, bikoitza, zuzena, lehena, positiboa, negatiboa edo zatigarria den zehazten du. Faltsua edo egiazkoa den bueltatzen du.";
Blockly.Msg.MATH_IS_WHOLE = "zenbaki zuzena da";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "%1 ÷ %2 ren hondarra";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Bi zenbaki zatitu ondoren, hondarra bueltatzen du.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/Número";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Zenbaki bat.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve el promedio (media aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de los elementos más comunes en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números en la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "zatiki aleatorioa";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "0.0 eta 0.99 barnean dagoen zenbaki aleatoria bueltatzen du";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "%1 eta %2 tartean zenbaki aleatorioa";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "zehaztatutako bi zenbakien barnean dagoen zenbaki aleatoria bueltatzen du";
Blockly.Msg.MATH_ROUND_HELPURL = "https://es.wikipedia.org/wiki/Redondeo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "biribildu";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "beruntz biribildu";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "goruntz biribildu";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Zenbaki bat goruntz edo beruntz biribildu";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://es.wikipedia.org/wiki/Ra%C3%ADz_cuadrada";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "erro karratua";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Zenbaki baten balio absolutoa iztuzen du.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Zenbaki baten potentzia bueltatzen du.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Zenbaki baten logaritmo naturala bueltatzen du.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Zenbaki bat ezeztatua bueltatzen du.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Zenbaki baten erro karratua bueltatzen du.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://es.wikipedia.org/wiki/Función_trigonométrica";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Zenbaki baten arcocosinua bueltatzen du";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Zenbaki baten arcosinua bueltatzen du";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Zenbaki baten arcotangentea bueltatzen du";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Angulu baten cosinua bueltatzen du.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Angulu baten sinua bueltatzen du.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Angulu baten tangentea bueltatzen du.";
Blockly.Msg.ME = "Ni";
Blockly.Msg.NEW_VARIABLE = "Aldagai berria...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Aldagai berriaren izena:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declaraciones";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1' y usa su salida.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe esta función...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "hacer algo";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "para";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia: Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devuelve un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de entrada:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añadir, eliminar o reordenar entradas para esta función.";
Blockly.Msg.REMOVE_COMMENT = "Ezabatu iruzkina";
Blockly.Msg.RENAME_VARIABLE = "Aldagaia berrizendatu";
Blockly.Msg.RENAME_VARIABLE_TITLE = "«%1» aldagai guztiak berrizendatu:";
Blockly.Msg.REPLACE_EXISTING_BLOCKS = "Replace existing blocks? 'Cancel' will merge.";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "Testua gehitu";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "'%1' aldagaiari testua gehitu.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "a Mayúsculas Cada Palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtener la letra # del final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener la letra #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtener la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener letra aleatoria";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra en la posición especificada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Testua gehitu";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "batu";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Blokea configuratzeko elementuak gehitu edo ezabatu";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtener subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener subcadena desde la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción determinada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición del texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última aparición del texto";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 hutsik dago";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Testua hitsik badago egiazkoa bueltatzen du.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "Textua zortu";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Hainbat elementu batuz textua zortu eta bueltatzen du.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "%1 ren luzeera";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Testua duen letra kantitatea bueltatzen du";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimir %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Imprimir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar al usuario un número.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar al usuario un texto.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicitar número con el mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicitar texto con el mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://es.wikipedia.org/wiki/Cadena_de_caracteres";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "letra, hitza edo textu lerroa.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar espacios de ambos lados de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar espacios iniciales de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "quitar espacios finales de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto sin los espacios de uno o ambos extremos.";
Blockly.Msg.TODAY = "Gaur";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elementu";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'establecer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Aldagaiaren balioa bueltazen du.";
Blockly.Msg.VARIABLES_SET = "%1 aren balioa  %2 ari ezarri";
Blockly.Msg.VARIABLES_SET_CREATE_GET = " %1 hartu' sortu";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Bigarren aldagaia lehenegoaren balioa hartzen du";
Blockly.Msg.ZUM_AS = "como";
Blockly.Msg.ZUM_BLUE = "blue";  // untranslated
Blockly.Msg.ZUM_BUT = "Botón";
Blockly.Msg.ZUM_BUT_BADCON_WARN = "No es una configuración válida";
Blockly.Msg.ZUM_BUT_HELP = "https://github.com/pololu/pushbutton-arduino";
Blockly.Msg.ZUM_BUT_INIT_WARN = "Los botones deben ser inicializados";
Blockly.Msg.ZUM_BUT_ISPRESSED = "está pulsado";
Blockly.Msg.ZUM_BUT_ISPRESSED_HELP = "https://github.com/pololu/pushbutton-arduino";
Blockly.Msg.ZUM_BUT_ISPRESSED_TIP = "Verdadero si el botón está pulsado";
Blockly.Msg.ZUM_BUT_PRES = "ha sido pulsado";
Blockly.Msg.ZUM_BUT_PRES_HELP = "https://github.com/pololu/pushbutton-arduino";
Blockly.Msg.ZUM_BUT_PRES_TIP = "Verdadero si el botón ha sido pulsado";
Blockly.Msg.ZUM_BUT_TIP = "Bloque para inicializar un botón";
Blockly.Msg.ZUM_BUT_UNKNOWN_WARN = "Unknown warning";
Blockly.Msg.ZUM_BUT_WAITFOR = "Esperar a";
Blockly.Msg.ZUM_BUT_WAITFOR_HELP = "https://github.com/pololu/pushbutton-arduino";
Blockly.Msg.ZUM_BUT_WAITFOR_TIP = "El porgrama no empieza hasta que se pulse el botón";
Blockly.Msg.ZUM_CENTER = "centro";
Blockly.Msg.ZUM_CENTERLEFT = "centro-izquierda";
Blockly.Msg.ZUM_CENTERRIGHT = "centro-derecha";
Blockly.Msg.ZUM_LED = "led";  // untranslated
Blockly.Msg.ZUM_LEDS_HELP = "http://pololu.github.io/zumo-32u4-arduino-library/_zumo32_u4_8h.html#ae6ec5117b26ffaaa1b81c8c8b34426e1";  // untranslated
Blockly.Msg.ZUM_LEDS_TIP = "Change the status of one of the two leds located on the robot";  // untranslated
Blockly.Msg.ZUM_LEFT = "izquierda";
Blockly.Msg.ZUM_LEFT_M = "Izquierdo";
Blockly.Msg.ZUM_LINE_GET_1 = "Lectura en sensor situado en";
Blockly.Msg.ZUM_LINE_GET_2 = "";
Blockly.Msg.ZUM_LINE_GET_TIP = "Devuelve un valor comprendido entre 0-2000 en función de la reflectancia de la superficie(0-Superficie clara y 2000-Superficie oscura), Es necesario emplear antes el bloque 'Leer Sensores de linea'.";
Blockly.Msg.ZUM_LINE_HELP = "http://pololu.github.io/zumo-32u4-arduino-library/class_zumo32_u4_line_sensors.html";
Blockly.Msg.ZUM_LINE_READ = "Irakurri lerro sentsoreak";
Blockly.Msg.ZUM_LINE_READ_TIP = "Lee los sensores de linea";
Blockly.Msg.ZUM_MOT_SET_2S = "Cambiar la velocidad de los motores";
Blockly.Msg.ZUM_MOT_SET_2S_HELP = "http://pololu.github.io/zumo-32u4-arduino-library/class_zumo32_u4_motors.html";
Blockly.Msg.ZUM_MOT_SET_2S_TIP = "Cambiar la velocidad de los dos motores, Introducir un entero entre -400 y 400, el signo indica el sentido de giro.";
Blockly.Msg.ZUM_MOT_SET_LS = "Establecer velocidad del motor izquierdo en";
Blockly.Msg.ZUM_MOT_SET_LS_HELP = "http://pololu.github.io/zumo-32u4-arduino-library/class_zumo32_u4_motors.html";
Blockly.Msg.ZUM_MOT_SET_LS_TIP = "Cambia la velocidad del motor izquierdo.Introducir un entero entre -400 y 400, el signo indica el sentido de giro.";
Blockly.Msg.ZUM_MOT_SET_RS = "Establecer velocidad del motor derecho en";
Blockly.Msg.ZUM_MOT_SET_RS_HELP = "http://pololu.github.io/zumo-32u4-arduino-library/class_zumo32_u4_motors.html";
Blockly.Msg.ZUM_MOT_SET_RS_TIP = "Cambia la velocidad del motor derecho. Introducir un entero entre -400 y 400, el signo indica el sentido de giro.";
Blockly.Msg.ZUM_PROX_GET = "detectar a su";
Blockly.Msg.ZUM_PROX_GET_TIP = "Devuelve un valor comprendido entre 1-6 en función de la proximidad entre el sensor y el objeto más cercano(1-Muy lejos y 6-Muy cerca), Es necesario emplear antes el bloque 'Leer Sensores de proximidad'.";
Blockly.Msg.ZUM_PROX_HELP = "http://pololu.github.io/zumo-32u4-arduino-library/class_zumo32_u4_proximity_sensors.html#details";
Blockly.Msg.ZUM_PROX_READ = "Irakurri gertutasun sentsoreak";
Blockly.Msg.ZUM_PROX_READ_TIP = "Lee los sensores de proximidad. ";
Blockly.Msg.ZUM_RED = "red";  // untranslated
Blockly.Msg.ZUM_RIGHT = "derecha";
Blockly.Msg.ZUM_RIGHT_M = "Derecho";
Blockly.Msg.ZUM_SENSOR_1 = "sensor";
Blockly.Msg.ZUM_SET = "Set";  // untranslated
Blockly.Msg.ZUM_TO = "to";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;